# This is a basic workflow to help you get started with Actions

name: Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  Linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Linting
        run: |
          pip install pre-commit flakehell
          pre-commit run --all-files

  Linux:
    needs: Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install and configure poetry
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip --version
        python -m pip install poetry
        python -m poetry --version
        python -m poetry config virtualenvs.create false
    - name: Install dependencies
      run: python -m poetry install
    - name: Test
      run: python -m pytest -q tests
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  MacOS:
    needs: Linting
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install and configure poetry
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip --version
        python -m pip install poetry
        python -m poetry --version
        python -m poetry config virtualenvs.create false
    - name: Install dependencies
      run: python -m poetry install
    - name: Test
      run: python -m pytest -q tests
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  Windows:
    needs: Linting
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      shell: bash
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install and configure poetry
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip --version
        python -m pip install poetry
        python -m poetry --version
        python -m poetry config virtualenvs.create false
    - name: Install dependencies
      run: python -m poetry install
    - name: Test
      run: |
        fsutil file createnew pytest.ini 0
        python -m pytest -q tests
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

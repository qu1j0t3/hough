# This is a basic workflow to help you get started with Actions

name: Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  Linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Linting
        run: |
          pip install pre-commit flakehell
          pre-commit run --all-files

  Linux:
    needs: Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.2
    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Update pip & setuptools
      run: |
        poetry run pip install --user -U pip setuptools
    - name: Install dependencies
      run: |
        poetry install
    - name: Test
      run: poetry run pytest -q tests
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  MacOS:
    needs: Linting
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.2
    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Update pip & setuptools
      run: |
        poetry run pip install --user -U pip setuptools
    - name: Install dependencies
      run: |
        poetry install
    - name: Test
      run: poetry run pytest -q tests
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  Windows:
    needs: Linting
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      shell: bash
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.2
    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Update pip & setuptools
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry run pip install --user -U pip setuptools
    - name: Install dependencies
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry install
    - name: Test
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        fsutil file createnew pytest.ini 0
        poetry run pytest -q tests
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
